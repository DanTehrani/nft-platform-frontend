export default {
  "contractName": "Token",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "pausers",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061367d806100206000396000f3fe60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461016f57806306fdde03146101e1578063081812fc14610271578063095ea7b3146102ec57806318160ddd1461034757806323b872dd146103725780632f745c59146103ed5780633f4ba83a1461045c57806342842e0e1461047357806346fbf68e146104ee5780634cd88b76146105575780634f6ccce7146106b65780635c975abb146107055780636352211e146107345780636ef8d66d146107af57806370a08231146107c65780638129fc1c1461082b57806382dc1ec4146108425780638456cb59146108935780638462151c146108aa57806395d89b4114610950578063a22cb465146109e0578063b88d4fde14610a3d578063c4d66de814610b4f578063c87b56dd14610ba0578063ca27593114610c54578063d0def52114610e47578063e985e9c514610eed575b600080fd5b34801561017b57600080fd5b506101c76004803603602081101561019257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f76565b604051808215151515815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610fde565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023657808201518184015260208101905061021b565b50505050905090810190601f1680156102635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027d57600080fd5b506102aa6004803603602081101561029457600080fd5b8101908080359060200190929190505050611080565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b506103456004803603604081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d1565b005b34801561035357600080fd5b5061035c6110fc565b6040518082815260200191505060405180910390f35b34801561037e57600080fd5b506103eb6004803603606081101561039557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061110a565b005b3480156103f957600080fd5b506104466004803603604081101561041057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611137565b6040518082815260200191505060405180910390f35b34801561046857600080fd5b506104716111af565b005b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611260565b005b3480156104fa57600080fd5b5061053d6004803603602081101561051157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611281565b604051808215151515815260200191505060405180910390f35b34801561056357600080fd5b506106b46004803603604081101561057a57600080fd5b810190808035906020019064010000000081111561059757600080fd5b8201836020820111156105a957600080fd5b803590602001918460018302840111640100000000831117156105cb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062e57600080fd5b82018360208201111561064057600080fd5b8035906020019184600183028401116401000000008311171561066257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061129e565b005b3480156106c257600080fd5b506106ef600480360360208110156106d957600080fd5b8101908080359060200190929190505050611442565b6040518082815260200191505060405180910390f35b34801561071157600080fd5b5061071a61147b565b604051808215151515815260200191505060405180910390f35b34801561074057600080fd5b5061076d6004803603602081101561075757600080fd5b8101908080359060200190929190505050611493565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107bb57600080fd5b506107c4611511565b005b3480156107d257600080fd5b50610815600480360360208110156107e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061151c565b6040518082815260200191505060405180910390f35b34801561083757600080fd5b506108406115a0565b005b34801561084e57600080fd5b506108916004803603602081101561086557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611714565b005b34801561089f57600080fd5b506108a8611734565b005b3480156108b657600080fd5b506108f9600480360360208110156108cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561093c578082015181840152602081019050610921565b505050509050019250505060405180910390f35b34801561095c57600080fd5b50610965611847565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109a557808201518184015260208101905061098a565b50505050905090810190601f1680156109d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109ec57600080fd5b50610a3b60048036036040811015610a0357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118e9565b005b348015610a4957600080fd5b50610b4d60048036036080811015610a6057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610ac757600080fd5b820183602082011115610ad957600080fd5b80359060200191846001830284011164010000000083111715610afb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611914565b005b348015610b5b57600080fd5b50610b9e60048036036020811015610b7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193c565b005b348015610bac57600080fd5b50610bd960048036036020811015610bc357600080fd5b8101908080359060200190929190505050611a8e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c19578082015181840152602081019050610bfe565b50505050905090810190601f168015610c465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c6057600080fd5b50610e4560048036036060811015610c7757600080fd5b8101908080359060200190640100000000811115610c9457600080fd5b820183602082011115610ca657600080fd5b80359060200191846001830284011164010000000083111715610cc857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d2b57600080fd5b820183602082011115610d3d57600080fd5b80359060200191846001830284011164010000000083111715610d5f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dc257600080fd5b820183602082011115610dd457600080fd5b80359060200191846020830284011164010000000083111715610df657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611b57565b005b348015610e5357600080fd5b50610eeb60048036036040811015610e6a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ea757600080fd5b820183602082011115610eb957600080fd5b80359060200191846001830284011164010000000083111715610edb57600080fd5b9091929391929390505050611cf0565b005b348015610ef957600080fd5b50610f5c60048036036040811015610f1057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5a565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060609c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b5050505050905090565b600061108b82611dee565b151561109657600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61010460009054906101000a900460ff161515156110ee57600080fd5b6110f88282611e60565b5050565b600061016b80549050905090565b61010460009054906101000a900460ff1615151561112757600080fd5b611132838383611fa5565b505050565b60006111428361151c565b8210151561114f57600080fd5b61016960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561119c57fe5b9060005260206000200154905092915050565b6111b833611281565b15156111c357600080fd5b61010460009054906101000a900460ff1615156111df57600080fd5b600061010460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61127c8383836020604051908101604052806000815250611914565b505050565b60006112978260d1611fca90919063ffffffff16565b9050919050565b600060019054906101000a900460ff16806112bd57506112bc61205e565b5b806112d457506000809054906101000a900460ff16155b151561136e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113be61206f565b15156113c957600080fd5b82609c90805190602001906113df929190613580565b5081609d90805190602001906113f6929190613580565b50611423635b5e139f7c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff021916908315150217905550505050565b600061144c6110fc565b8210151561145957600080fd5b61016b8281548110151561146957fe5b90600052602060002001549050919050565b600061010460009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561150857600080fd5b80915050919050565b61151a33612160565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561155957600080fd5b606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff16806115bf57506115be61205e565b5b806115d657506000809054906101000a900460ff16155b1515611670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506116c061206f565b15156116cb57600080fd5b6116f763780e9d637c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b61171d33611281565b151561172857600080fd5b611731816121ba565b50565b61173d33611281565b151561174857600080fd5b61010460009054906101000a900460ff1615151561176557600080fd5b600161010460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60606117f182612214565b80548060200260200160405190810160405280929190818152602001828054801561183b57602002820191906000526020600020905b815481526020019060010190808311611827575b50505050509050919050565b6060609d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118df5780601f106118b4576101008083540402835291602001916118df565b820191906000526020600020905b8154815290600101906020018083116118c257829003601f168201915b5050505050905090565b61010460009054906101000a900460ff1615151561190657600080fd5b611910828261225d565b5050565b61191f84848461110a565b61192b84848484612399565b151561193657600080fd5b50505050565b600060019054906101000a900460ff168061195b575061195a61205e565b5b8061197257506000809054906101000a900460ff16155b1515611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611a5c61206f565b1515611a6757600080fd5b611a70826125bc565b80600060016101000a81548160ff0219169083151502179055505050565b6060611a9982611dee565b1515611aa457600080fd5b609e60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b4b5780601f10611b2057610100808354040283529160200191611b4b565b820191906000526020600020905b815481529060010190602001808311611b2e57829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611b765750611b7561205e565b5b80611b8d57506000809054906101000a900460ff16155b1515611c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611c77612717565b611c81848461129e565b611c8a3061193c565b611c9330612160565b60008090505b8251811015611ccf57611cc28382815181101515611cb357fe5b906020019060200201516121ba565b8080600101915050611c99565b5080600060016101000a81548160ff02191690831515021790555050505050565b6000611cfa6110fc565b9050611d068482612880565b611d548184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506128a1565b50505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611e6b82611493565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ea857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ee85750611ee78133611d5a565b5b1515611ef357600080fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611faf33826128e1565b1515611fba57600080fd5b611fc5838383612976565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561200757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b600061209d6380ac58cd7c010000000000000000000000000000000000000000000000000000000002610f76565b905090565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156120f357600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6121748160d161299a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6121ce8160d1612a4990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600061016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561229857600080fd5b80606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006123ba8473ffffffffffffffffffffffffffffffffffffffff16612af9565b15156123c957600190506125b4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124c05780820151818401526020810190506124a5565b50505050905090810190601f1680156124ed5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561250f57600080fd5b505af1158015612523573d6000803e3d6000fd5b505050506040513d602081101561253957600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff16806125db57506125da61205e565b5b806125f257506000809054906101000a900460ff16155b151561268c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506126dd82612b0c565b600061010460006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612736575061273561205e565b5b8061274d57506000809054906101000a900460ff16155b15156127e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612837612c5b565b6128636380ac58cd7c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b61288a8282612dbc565b6128948282612f55565b61289d8161301f565b5050565b6128aa82611dee565b15156128b557600080fd5b80609e600084815260200190815260200160002090805190602001906128dc929190613580565b505050565b6000806128ed83611493565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061295c57508373ffffffffffffffffffffffffffffffffffffffff1661294484611080565b73ffffffffffffffffffffffffffffffffffffffff16145b8061296d575061296c8185611d5a565b5b91505092915050565b61298183838361306e565b61298b83826132d3565b6129958282612f55565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156129d657600080fd5b6129e08282611fca565b15156129eb57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612a8557600080fd5b612a8f8282611fca565b151515612a9b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680612b2b5750612b2a61205e565b5b80612b4257506000809054906101000a900460ff16155b1515612bdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612c2d82611281565b1515612c3d57612c3c826121ba565b5b80600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612c7a5750612c7961205e565b5b80612c9157506000809054906101000a900460ff16155b1515612d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612d9f6301ffc9a77c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612df857600080fd5b612e0181611dee565b151515612e0d57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eb26001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061016a60008381526020019081526020016000208190555061016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61016b8054905061016c60008381526020019081526020016000208190555061016b81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8273ffffffffffffffffffffffffffffffffffffffff1661308e82611493565b73ffffffffffffffffffffffffffffffffffffffff161415156130b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130ec57600080fd5b6130f58161349e565b6131486001606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461355e90919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506131de6001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061332c600161016960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061355e90919063ffffffff16565b9050600061016a6000848152602001908152602001600020549050818114151561342357600061016960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561339f57fe5b906000526020600020015490508061016960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133fa57fe5b90600052602060002001819055508161016a600083815260200190815260200160002081905550505b61016960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036134769190613600565b5050505050565b600080828401905083811015151561349457600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561355b5760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600082821115151561356f57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135c157805160ff19168380011785556135ef565b828001600101855582156135ef579182015b828111156135ee5782518255916020019190600101906135d3565b5b5090506135fc919061362c565b5090565b81548183558181111561362757818360005260206000209182019101613626919061362c565b5b505050565b61364e91905b8082111561364a576000816000905550600101613632565b5090565b9056fea165627a7a72305820e0a94f731fa6226823b5ac54a7f880ee065b31ae972ecbfcbfc9d49956c2a23a0029",
  "deployedBytecode": "0x60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461016f57806306fdde03146101e1578063081812fc14610271578063095ea7b3146102ec57806318160ddd1461034757806323b872dd146103725780632f745c59146103ed5780633f4ba83a1461045c57806342842e0e1461047357806346fbf68e146104ee5780634cd88b76146105575780634f6ccce7146106b65780635c975abb146107055780636352211e146107345780636ef8d66d146107af57806370a08231146107c65780638129fc1c1461082b57806382dc1ec4146108425780638456cb59146108935780638462151c146108aa57806395d89b4114610950578063a22cb465146109e0578063b88d4fde14610a3d578063c4d66de814610b4f578063c87b56dd14610ba0578063ca27593114610c54578063d0def52114610e47578063e985e9c514610eed575b600080fd5b34801561017b57600080fd5b506101c76004803603602081101561019257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f76565b604051808215151515815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610fde565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023657808201518184015260208101905061021b565b50505050905090810190601f1680156102635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027d57600080fd5b506102aa6004803603602081101561029457600080fd5b8101908080359060200190929190505050611080565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b506103456004803603604081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d1565b005b34801561035357600080fd5b5061035c6110fc565b6040518082815260200191505060405180910390f35b34801561037e57600080fd5b506103eb6004803603606081101561039557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061110a565b005b3480156103f957600080fd5b506104466004803603604081101561041057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611137565b6040518082815260200191505060405180910390f35b34801561046857600080fd5b506104716111af565b005b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611260565b005b3480156104fa57600080fd5b5061053d6004803603602081101561051157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611281565b604051808215151515815260200191505060405180910390f35b34801561056357600080fd5b506106b46004803603604081101561057a57600080fd5b810190808035906020019064010000000081111561059757600080fd5b8201836020820111156105a957600080fd5b803590602001918460018302840111640100000000831117156105cb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062e57600080fd5b82018360208201111561064057600080fd5b8035906020019184600183028401116401000000008311171561066257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061129e565b005b3480156106c257600080fd5b506106ef600480360360208110156106d957600080fd5b8101908080359060200190929190505050611442565b6040518082815260200191505060405180910390f35b34801561071157600080fd5b5061071a61147b565b604051808215151515815260200191505060405180910390f35b34801561074057600080fd5b5061076d6004803603602081101561075757600080fd5b8101908080359060200190929190505050611493565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107bb57600080fd5b506107c4611511565b005b3480156107d257600080fd5b50610815600480360360208110156107e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061151c565b6040518082815260200191505060405180910390f35b34801561083757600080fd5b506108406115a0565b005b34801561084e57600080fd5b506108916004803603602081101561086557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611714565b005b34801561089f57600080fd5b506108a8611734565b005b3480156108b657600080fd5b506108f9600480360360208110156108cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561093c578082015181840152602081019050610921565b505050509050019250505060405180910390f35b34801561095c57600080fd5b50610965611847565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109a557808201518184015260208101905061098a565b50505050905090810190601f1680156109d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109ec57600080fd5b50610a3b60048036036040811015610a0357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118e9565b005b348015610a4957600080fd5b50610b4d60048036036080811015610a6057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610ac757600080fd5b820183602082011115610ad957600080fd5b80359060200191846001830284011164010000000083111715610afb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611914565b005b348015610b5b57600080fd5b50610b9e60048036036020811015610b7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193c565b005b348015610bac57600080fd5b50610bd960048036036020811015610bc357600080fd5b8101908080359060200190929190505050611a8e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c19578082015181840152602081019050610bfe565b50505050905090810190601f168015610c465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c6057600080fd5b50610e4560048036036060811015610c7757600080fd5b8101908080359060200190640100000000811115610c9457600080fd5b820183602082011115610ca657600080fd5b80359060200191846001830284011164010000000083111715610cc857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d2b57600080fd5b820183602082011115610d3d57600080fd5b80359060200191846001830284011164010000000083111715610d5f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dc257600080fd5b820183602082011115610dd457600080fd5b80359060200191846020830284011164010000000083111715610df657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611b57565b005b348015610e5357600080fd5b50610eeb60048036036040811015610e6a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ea757600080fd5b820183602082011115610eb957600080fd5b80359060200191846001830284011164010000000083111715610edb57600080fd5b9091929391929390505050611cf0565b005b348015610ef957600080fd5b50610f5c60048036036040811015610f1057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5a565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060609c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b5050505050905090565b600061108b82611dee565b151561109657600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61010460009054906101000a900460ff161515156110ee57600080fd5b6110f88282611e60565b5050565b600061016b80549050905090565b61010460009054906101000a900460ff1615151561112757600080fd5b611132838383611fa5565b505050565b60006111428361151c565b8210151561114f57600080fd5b61016960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561119c57fe5b9060005260206000200154905092915050565b6111b833611281565b15156111c357600080fd5b61010460009054906101000a900460ff1615156111df57600080fd5b600061010460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61127c8383836020604051908101604052806000815250611914565b505050565b60006112978260d1611fca90919063ffffffff16565b9050919050565b600060019054906101000a900460ff16806112bd57506112bc61205e565b5b806112d457506000809054906101000a900460ff16155b151561136e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113be61206f565b15156113c957600080fd5b82609c90805190602001906113df929190613580565b5081609d90805190602001906113f6929190613580565b50611423635b5e139f7c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff021916908315150217905550505050565b600061144c6110fc565b8210151561145957600080fd5b61016b8281548110151561146957fe5b90600052602060002001549050919050565b600061010460009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561150857600080fd5b80915050919050565b61151a33612160565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561155957600080fd5b606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff16806115bf57506115be61205e565b5b806115d657506000809054906101000a900460ff16155b1515611670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506116c061206f565b15156116cb57600080fd5b6116f763780e9d637c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b61171d33611281565b151561172857600080fd5b611731816121ba565b50565b61173d33611281565b151561174857600080fd5b61010460009054906101000a900460ff1615151561176557600080fd5b600161010460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60606117f182612214565b80548060200260200160405190810160405280929190818152602001828054801561183b57602002820191906000526020600020905b815481526020019060010190808311611827575b50505050509050919050565b6060609d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118df5780601f106118b4576101008083540402835291602001916118df565b820191906000526020600020905b8154815290600101906020018083116118c257829003601f168201915b5050505050905090565b61010460009054906101000a900460ff1615151561190657600080fd5b611910828261225d565b5050565b61191f84848461110a565b61192b84848484612399565b151561193657600080fd5b50505050565b600060019054906101000a900460ff168061195b575061195a61205e565b5b8061197257506000809054906101000a900460ff16155b1515611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611a5c61206f565b1515611a6757600080fd5b611a70826125bc565b80600060016101000a81548160ff0219169083151502179055505050565b6060611a9982611dee565b1515611aa457600080fd5b609e60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b4b5780601f10611b2057610100808354040283529160200191611b4b565b820191906000526020600020905b815481529060010190602001808311611b2e57829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611b765750611b7561205e565b5b80611b8d57506000809054906101000a900460ff16155b1515611c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611c77612717565b611c81848461129e565b611c8a3061193c565b611c9330612160565b60008090505b8251811015611ccf57611cc28382815181101515611cb357fe5b906020019060200201516121ba565b8080600101915050611c99565b5080600060016101000a81548160ff02191690831515021790555050505050565b6000611cfa6110fc565b9050611d068482612880565b611d548184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506128a1565b50505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611e6b82611493565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ea857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ee85750611ee78133611d5a565b5b1515611ef357600080fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611faf33826128e1565b1515611fba57600080fd5b611fc5838383612976565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561200757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b600061209d6380ac58cd7c010000000000000000000000000000000000000000000000000000000002610f76565b905090565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156120f357600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6121748160d161299a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6121ce8160d1612a4990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600061016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561229857600080fd5b80606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006123ba8473ffffffffffffffffffffffffffffffffffffffff16612af9565b15156123c957600190506125b4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124c05780820151818401526020810190506124a5565b50505050905090810190601f1680156124ed5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561250f57600080fd5b505af1158015612523573d6000803e3d6000fd5b505050506040513d602081101561253957600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff16806125db57506125da61205e565b5b806125f257506000809054906101000a900460ff16155b151561268c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506126dd82612b0c565b600061010460006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612736575061273561205e565b5b8061274d57506000809054906101000a900460ff16155b15156127e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612837612c5b565b6128636380ac58cd7c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b61288a8282612dbc565b6128948282612f55565b61289d8161301f565b5050565b6128aa82611dee565b15156128b557600080fd5b80609e600084815260200190815260200160002090805190602001906128dc929190613580565b505050565b6000806128ed83611493565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061295c57508373ffffffffffffffffffffffffffffffffffffffff1661294484611080565b73ffffffffffffffffffffffffffffffffffffffff16145b8061296d575061296c8185611d5a565b5b91505092915050565b61298183838361306e565b61298b83826132d3565b6129958282612f55565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156129d657600080fd5b6129e08282611fca565b15156129eb57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612a8557600080fd5b612a8f8282611fca565b151515612a9b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680612b2b5750612b2a61205e565b5b80612b4257506000809054906101000a900460ff16155b1515612bdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612c2d82611281565b1515612c3d57612c3c826121ba565b5b80600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612c7a5750612c7961205e565b5b80612c9157506000809054906101000a900460ff16155b1515612d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612d9f6301ffc9a77c0100000000000000000000000000000000000000000000000000000000026120a2565b80600060016101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612df857600080fd5b612e0181611dee565b151515612e0d57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eb26001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061016a60008381526020019081526020016000208190555061016960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61016b8054905061016c60008381526020019081526020016000208190555061016b81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8273ffffffffffffffffffffffffffffffffffffffff1661308e82611493565b73ffffffffffffffffffffffffffffffffffffffff161415156130b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130ec57600080fd5b6130f58161349e565b6131486001606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461355e90919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506131de6001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061332c600161016960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061355e90919063ffffffff16565b9050600061016a6000848152602001908152602001600020549050818114151561342357600061016960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561339f57fe5b906000526020600020015490508061016960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133fa57fe5b90600052602060002001819055508161016a600083815260200190815260200160002081905550505b61016960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036134769190613600565b5050505050565b600080828401905083811015151561349457600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561355b5760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600082821115151561356f57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135c157805160ff19168380011785556135ef565b828001600101855582156135ef579182015b828111156135ee5782518255916020019190600101906135d3565b5b5090506135fc919061362c565b5090565b81548183558181111561362757818360005260206000209182019101613626919061362c565b5b505050565b61364e91905b8082111561364a576000816000905550600101613632565b5090565b9056fea165627a7a72305820e0a94f731fa6226823b5ac54a7f880ee065b31ae972ecbfcbfc9d49956c2a23a0029",
  "sourceMap": "413:840:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:840:0;;;;;;;",
  "deployedSourceMap": "413:840:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:131:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;856:131:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1279:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:151:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:151:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3944:151:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:110:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:110:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:110:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:94:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2273:94:8;;;;;;;;;;;;;;;;;;;;;;;705:140:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;705:140:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;705:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:182:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1939:182:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1939:182:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:115:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:115:5;;;;;;6318:132:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6318:132:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6318:132:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:321:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:321:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;727:321:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:9;;;;;;;;;;;;;;;;;;2704:148:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2704:148:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2704:148:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:76:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;592:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:177:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:177:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:177:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:75:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:2;;;;;;2395:150:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2395:150:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2395:150:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:233:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:233:8;;;;;;646:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:2;;;;;;;;;;;;;;;;;;;;;;1105:113:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1105:113:5;;;;;;1134:117:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:117:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1134:117:0;;;;;;;;;;;;;;;;;1470:87:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:87:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1470:87:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:129:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;570:129:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;570:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:211:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7155:211:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7155:211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7155:211:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7155:211:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7155:211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7155:211:7;;;;;;;;;;;;;;;;;;302:146:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:146:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;302:146:10;;;;;;;;;;;;;;;;;;;;;;1756:151:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:151:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1756:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1756:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:465:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;507:465:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;507:465:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;507:465:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;507:465:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;507:465:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;507:465:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;507:465:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;507:465:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;507:465:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;507:465:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;507:465:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;507:465:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;507:465:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;507:465:0;;;;;;;;;;;;;;;;;;976:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;976:154:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;976:154:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;976:154:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;976:154:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;976:154:0;;;;;;;;;;;;;;;4921:145:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4921:145:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4921:145:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:3;924:4;947:20;:33;968:11;947:33;;;;;;;;;;;;;;;;;;;;;;;;;;;940:40;;856:131;;;:::o;1279:83:9:-;1318:13;1350:5;1343:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83;:::o;3944:151:7:-;4003:7;4030:16;4038:7;4030;:16::i;:::-;4022:25;;;;;;;;4064:15;:24;4080:7;4064:24;;;;;;;;;;;;;;;;;;;;;4057:31;;3944:151;;;:::o;454:110:10:-;821:7:5;;;;;;;;;;;820:8;812:17;;;;;;;;531:26:10;545:2;549:7;531:13;:26::i;:::-;454:110;;:::o;2273:94:8:-;2317:7;2343:10;:17;;;;2336:24;;2273:94;:::o;705:140:10:-;821:7:5;;;;;;;;;;;820:8;812:17;;;;;;;;801:37:10;820:4;826:2;830:7;801:18;:37::i;:::-;705:140;;;:::o;1939:182:8:-;2019:7;2054:16;2064:5;2054:9;:16::i;:::-;2046:5;:24;2038:33;;;;;;;;2088:12;:19;2101:5;2088:19;;;;;;;;;;;;;;;2108:5;2088:26;;;;;;;;;;;;;;;;;;2081:33;;1939:182;;;;:::o;1308:115:5:-;488:20:2;497:10;488:8;:20::i;:::-;480:29;;;;;;;;992:7:5;;;;;;;;;;;984:16;;;;;;;;1376:5;1366:7;;:15;;;;;;;;;;;;;;;;;;1396:20;1405:10;1396:20;;;;;;;;;;;;;;;;;;;;;;1308:115::o;6318:132:7:-;6404:39;6421:4;6427:2;6431:7;6404:39;;;;;;;;;;;;;:16;:39::i;:::-;6318:132;;;:::o;533:107:2:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;727:321:9:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;826:28:9;:26;:28::i;:::-;818:37;;;;;;;;874:4;866:5;:12;;;;;;;;;;;;:::i;:::-;;898:6;888:7;:16;;;;;;;;;;;;:::i;:::-;;992:49;489:10;1011:29;;992:18;:49::i;:::-;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;727:321:9;;;:::o;2704:148:8:-;2762:7;2797:13;:11;:13::i;:::-;2789:5;:21;2781:30;;;;;;;;2828:10;2839:5;2828:17;;;;;;;;;;;;;;;;;;2821:24;;2704:148;;;:::o;592:76:5:-;631:4;654:7;;;;;;;;;;;647:14;;592:76;:::o;2769:177:7:-;2824:7;2843:13;2859:11;:20;2871:7;2859:20;;;;;;;;;;;;;;;;;;;;;2843:36;;2914:1;2897:19;;:5;:19;;;;2889:28;;;;;;;;2934:5;2927:12;;;2769:177;;;:::o;742:75:2:-;785:25;799:10;785:13;:25::i;:::-;742:75::o;2395:150:7:-;2450:7;2494:1;2477:19;;:5;:19;;;;2469:28;;;;;;;;2514:17;:24;2532:5;2514:24;;;;;;;;;;;;;;;;2507:31;;2395:150;;;:::o;1193:233:8:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1252:28:8;:26;:28::i;:::-;1244:37;;;;;;;;1368:51;916:10;1387:31;;1368:18;:51::i;:::-;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;1193:233:8;:::o;646:90:2:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;1105:113:5:-;488:20:2;497:10;488:8;:20::i;:::-;480:29;;;;;;;;821:7:5;;;;;;;;;;;820:8;812:17;;;;;;;;1174:4;1164:7;;:14;;;;;;;;;;;;;;;;;;1193:18;1200:10;1193:18;;;;;;;;;;;;;;;;;;;;;;1105:113::o;1134:117:0:-;1194:16;1225:21;1240:5;1225:14;:21::i;:::-;1218:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:117;;;:::o;1470:87:9:-;1511:13;1543:7;1536:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:87;:::o;570:129:10:-;821:7:5;;;;;;;;;;;820:8;812:17;;;;;;;;655:37:10;679:2;683:8;655:23;:37::i;:::-;570:129;;:::o;7155:211:7:-;7261:31;7274:4;7280:2;7284:7;7261:12;:31::i;:::-;7310:48;7333:4;7339:2;7343:7;7352:5;7310:22;:48::i;:::-;7302:57;;;;;;;;7155:211;;;;:::o;302:146:10:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:28:10;:26;:28::i;:::-;367:37;;;;;;;;414:27;434:6;414:19;:27::i;:::-;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;302:146:10;;:::o;1756:151:9:-;1814:13;1847:16;1855:7;1847;:16::i;:::-;1839:25;;;;;;;;1881:10;:19;1892:7;1881:19;;;;;;;;;;;1874:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:151;;;:::o;507:465:0:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;620:19:0;:17;:19::i;:::-;645:39;671:4;677:6;645:25;:39::i;:::-;691:40;725:4;691:25;:40::i;:::-;737:28;759:4;737:13;:28::i;:::-;891:9;903:1;891:13;;886:82;910:7;:14;906:1;:18;886:82;;;939:22;950:7;958:1;950:10;;;;;;;;;;;;;;;;;;939;:22::i;:::-;926:3;;;;;;;886:82;;;;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;507:465:0;;;;:::o;976:154::-;1038:15;1056:13;:11;:13::i;:::-;1038:31;;1075:18;1081:2;1085:7;1075:5;:18::i;:::-;1099:26;1112:7;1121:3;;1099:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1099::0;;;;;;:12;:26::i;:::-;976:154;;;;:::o;4921:145:7:-;5001:4;5024:18;:25;5043:5;5024:25;;;;;;;;;;;;;;;:35;5050:8;5024:35;;;;;;;;;;;;;;;;;;;;;;;;;5017:42;;4921:145;;;;:::o;7555:152::-;7612:4;7628:13;7644:11;:20;7656:7;7644:20;;;;;;;;;;;;;;;;;;;;;7628:36;;7698:1;7681:19;;:5;:19;;;;7674:26;;;7555:152;;;:::o;3367:292::-;3430:13;3446:16;3454:7;3446;:16::i;:::-;3430:32;;3486:5;3480:11;;:2;:11;;;;3472:20;;;;;;;;3524:5;3510:19;;:10;:19;;;:58;;;;3533:35;3550:5;3557:10;3533:16;:35::i;:::-;3510:58;3502:67;;;;;;;;3607:2;3580:15;:24;3596:7;3580:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3644:7;3640:2;3624:28;;3633:5;3624:28;;;;;;;;;;;;3367:292;;;:::o;5499:180::-;5589:39;5608:10;5620:7;5589:18;:39::i;:::-;5581:48;;;;;;;;5640:32;5654:4;5660:2;5664:7;5640:13;:32::i;:::-;5499:180;;;:::o;786:162:1:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1349:467:16:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;2069:123:7:-;2123:4;2146:39;1224:10;2164:20;;2146:17;:39::i;:::-;2139:46;;2069:123;:::o;1066:158:3:-;1156:10;1141:25;;:11;:25;;;;;1133:34;;;;;;;;1213:4;1177:20;:33;1198:11;1177:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1066:158;:::o;948:127:2:-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;823:119::-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;4756:124:8:-;4818:17;4854:12;:19;4867:5;4854:19;;;;;;;;;;;;;;;4847:26;;4756:124;;;:::o;4387:213:7:-;4472:10;4466:16;;:2;:16;;;;4458:25;;;;;;;;4530:8;4493:18;:30;4512:10;4493:30;;;;;;;;;;;;;;;:34;4524:2;4493:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4580:2;4553:40;;4568:10;4553:40;;;4584:8;4553:40;;;;;;;;;;;;;;;;;;;;;;4387:213;;:::o;10983:347::-;11104:4;11129:15;:2;:13;;;:15::i;:::-;11128:16;11124:58;;;11167:4;11160:11;;;;11124:58;11192:13;11224:2;11208:36;;;11245:10;11257:4;11263:7;11272:5;11208:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11208:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11208:70:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11208:70:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11208:70:7;;;;;;;;;;;;;;;;11192:86;;719:10;11306:16;;11296:26;;;:6;:26;;;;11288:35;;;10983:347;;;;;;;:::o;379:127:5:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;444:29:5;466:6;444:21;:29::i;:::-;494:5;484:7;;:15;;;;;;;;;;;;;;;;;;1243::16;1228:12;;:30;;;;;;;;;;;;;;;;;;379:127:5;;:::o;1858:205:7:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1909:19:7;:17;:19::i;:::-;2016:40;1224:10;2035:20;;2016:18;:40::i;:::-;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;1858:205:7;:::o;3720:196:8:-;3783:24;3795:2;3799:7;3783:11;:24::i;:::-;3818:40;3846:2;3850:7;3818:27;:40::i;:::-;3869;3901:7;3869:31;:40::i;:::-;3720:196;;:::o;2144:144:9:-;2229:16;2237:7;2229;:16::i;:::-;2221:25;;;;;;;;2278:3;2256:10;:19;2267:7;2256:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2144:144;;:::o;8070:246:7:-;8155:4;8171:13;8187:16;8195:7;8187;:16::i;:::-;8171:32;;8232:5;8221:16;;:7;:16;;;:51;;;;8265:7;8241:31;;:20;8253:7;8241:11;:20::i;:::-;:31;;;8221:51;:87;;;;8276:32;8293:5;8300:7;8276:16;:32::i;:::-;8221:87;8213:96;;;8070:246;;;;:::o;3226:239:8:-;3311:38;3331:4;3337:2;3341:7;3311:19;:38::i;:::-;3360:47;3393:4;3399:7;3360:32;:47::i;:::-;3418:40;3446:2;3450:7;3418:27;:40::i;:::-;3226:239;;;:::o;514:184:1:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;463:616:15:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;305:137:2:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:2;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:2;;:::o;667:98:3:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;718:40:3;297:10;737:20;;718:18;:40::i;:::-;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;667:98:3;:::o;8559:278:7:-;8644:1;8630:16;;:2;:16;;;;8622:25;;;;;;;;8666:16;8674:7;8666;:16::i;:::-;8665:17;8657:26;;;;;;;;8717:2;8694:11;:20;8706:7;8694:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8753:28;8779:1;8753:17;:21;8771:2;8753:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;8729:17;:21;8747:2;8729:21;;;;;;;;;;;;;;;:52;;;;8822:7;8818:2;8797:33;;8814:1;8797:33;;;;;;;;;;;;8559:278;;:::o;5174:183:8:-;5287:12;:16;5300:2;5287:16;;;;;;;;;;;;;;;:23;;;;5258:17;:26;5276:7;5258:26;;;;;;;;;;;:52;;;;5320:12;:16;5333:2;5320:16;;;;;;;;;;;;;;;5342:7;5320:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5320:30:8;;;;;;;;;;;;;;;;;;;;;;5174:183;;:::o;5552:161::-;5655:10;:17;;;;5628:15;:24;5644:7;5628:24;;;;;;;;;;;:44;;;;5682:10;5698:7;5682:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5682:24:8;;;;;;;;;;;;;;;;;;;;;;5552:161;:::o;10058:402:7:-;10171:4;10151:24;;:16;10159:7;10151;:16::i;:::-;:24;;;10143:33;;;;;;;;10208:1;10194:16;;:2;:16;;;;10186:25;;;;;;;;10222:23;10237:7;10222:14;:23::i;:::-;10282:30;10310:1;10282:17;:23;10300:4;10282:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10256:17;:23;10274:4;10256:23;;;;;;;;;;;;;;;:56;;;;10346:28;10372:1;10346:17;:21;10364:2;10346:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10322:17;:21;10340:2;10322:21;;;;;;;;;;;;;;;:52;;;;10408:2;10385:11;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10058:402;;;:::o;6328:1128:8:-;6590:22;6615:32;6645:1;6615:12;:18;6628:4;6615:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6590:57;;6657:18;6678:17;:26;6696:7;6678:26;;;;;;;;;;;;6657:47;;6822:14;6808:10;:28;;6804:323;;;6852:19;6874:12;:18;6887:4;6874:18;;;;;;;;;;;;;;;6893:14;6874:34;;;;;;;;;;;;;;;;;;6852:56;;6956:11;6923:12;:18;6936:4;6923:18;;;;;;;;;;;;;;;6942:10;6923:30;;;;;;;;;;;;;;;;;:44;;;;7072:10;7039:17;:30;7057:11;7039:30;;;;;;;;;;;:43;;;;6804:323;;7213:12;:18;7226:4;7213:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6328:1128;;;;:::o;1431:145:6:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;11491:171:7:-;11590:1;11554:38;;:15;:24;11570:7;11554:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11550:106;;;11643:1;11608:15;:24;11624:7;11608:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11550:106;11491:171;:::o;1205:145:6:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;413:840:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol\";\n\ncontract Token is Initializable, ERC721, ERC721Metadata, ERC721Pausable, ERC721Enumerable {\n  function initialize(string memory name, string memory symbol, address[] memory pausers) public initializer {\n    ERC721.initialize();\n    ERC721Metadata.initialize(name, symbol);\n\n    ERC721Pausable.initialize(address(this));\n    _removePauser(address(this));\n\n    // Add the requested pausers (this can be done after renouncing since\n      // these are the internal calls)\n\n    for (uint256 i = 0; i < pausers.length; i++) {\n      _addPauser(pausers[i]);\n    }\n  }\n\n  function mint(address to, string calldata uri) external {\n    uint256 tokenId = totalSupply();\n    _mint(to, tokenId);\n    _setTokenURI(tokenId, uri);\n  }\n\n  function tokensOfOwner(address owner) external view returns(uint256[] memory) {\n    return _tokensOfOwner(owner);\n  }\n}\n",
  "sourcePath": "/home/daniel/nft-platform/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/daniel/nft-platform/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 2062,
        "src": "25:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1207,
        "src": "71:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1567,
        "src": "132:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1719,
        "src": "203:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1809,
        "src": "272:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1567,
        "src": "341:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2061,
              "src": "431:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2061",
                "typeString": "contract Initializable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "431:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1206,
              "src": "446:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1206",
                "typeString": "contract ERC721"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "446:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1718,
              "src": "454:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1718",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "454:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1808,
              "src": "470:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$1808",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "470:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1566,
              "src": "486:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1566",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "486:16:0"
          }
        ],
        "contractDependencies": [
          325,
          385,
          395,
          495,
          1206,
          1566,
          1718,
          1808,
          1914,
          1944,
          1970,
          2061
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112,
          1566,
          1944,
          1808,
          495,
          325,
          1718,
          1970,
          1206,
          1914,
          385,
          395,
          2061
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "614:358:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "620:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1206_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 682,
                      "src": "620:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "620:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "671:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "645:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1718_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1619,
                      "src": "645:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "645:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "725:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "717:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1808,
                        "src": "691:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$1808_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1749,
                      "src": "691:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "691:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "691:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 51,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "759:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "737:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "737:28:0"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "931:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 67,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "950:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 69,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "958:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "950:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 66,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "939:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "939:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "939:22:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "906:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "910:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73,
                  "initializationExpression": {
                    "assignments": [
                      56
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 56,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "891:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 58,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "903:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "891:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "926:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "926:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65,
                    "nodeType": "ExpressionStatement",
                    "src": "926:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "886:82:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2042,
                  "src": "602:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "602:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "527:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "547:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "569:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "569:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "569:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:68:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:0"
            },
            "scope": 112,
            "src": "507:465:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1032:98:0",
              "statements": [
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1038:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1038:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 84,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1298
                      ],
                      "referencedDeclaration": 1298,
                      "src": "1056:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1056:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1038:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1081:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1369
                      ],
                      "referencedDeclaration": 1369,
                      "src": "1075:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1075:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1121:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 92,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1683,
                      "src": "1099:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "990:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1002:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "989:33:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:0"
            },
            "scope": 112,
            "src": "976:154:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1212:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1240:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1412,
                      "src": "1225:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "1218:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1157:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1156:15:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1194:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1194:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1194:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:18:0"
            },
            "scope": 112,
            "src": "1134:117:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 113,
        "src": "413:840:0"
      }
    ],
    "src": "0:1254:0"
  },
  "legacyAST": {
    "absolutePath": "/home/daniel/nft-platform/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 2062,
        "src": "25:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1207,
        "src": "71:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1567,
        "src": "132:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1719,
        "src": "203:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1809,
        "src": "272:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1567,
        "src": "341:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2061,
              "src": "431:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2061",
                "typeString": "contract Initializable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "431:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1206,
              "src": "446:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1206",
                "typeString": "contract ERC721"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "446:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1718,
              "src": "454:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1718",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "454:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1808,
              "src": "470:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$1808",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "470:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1566,
              "src": "486:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1566",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "486:16:0"
          }
        ],
        "contractDependencies": [
          325,
          385,
          395,
          495,
          1206,
          1566,
          1718,
          1808,
          1914,
          1944,
          1970,
          2061
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112,
          1566,
          1944,
          1808,
          495,
          325,
          1718,
          1970,
          1206,
          1914,
          385,
          395,
          2061
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "614:358:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "620:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1206_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 682,
                      "src": "620:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "620:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "671:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "645:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1718_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1619,
                      "src": "645:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "645:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "725:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "717:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1808,
                        "src": "691:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$1808_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1749,
                      "src": "691:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "691:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "691:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 51,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "759:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$112",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "737:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "737:28:0"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "931:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 67,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "950:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 69,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "958:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "950:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 66,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "939:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "939:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "939:22:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "906:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "910:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73,
                  "initializationExpression": {
                    "assignments": [
                      56
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 56,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "891:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 58,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "903:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "891:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "926:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "926:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65,
                    "nodeType": "ExpressionStatement",
                    "src": "926:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "886:82:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2042,
                  "src": "602:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "602:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "527:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "547:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "569:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "569:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "569:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:68:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:0"
            },
            "scope": 112,
            "src": "507:465:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1032:98:0",
              "statements": [
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1038:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1038:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 84,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1298
                      ],
                      "referencedDeclaration": 1298,
                      "src": "1056:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1056:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1038:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1081:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1369
                      ],
                      "referencedDeclaration": 1369,
                      "src": "1075:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1075:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1121:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 92,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1683,
                      "src": "1099:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "990:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1002:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "989:33:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:0"
            },
            "scope": 112,
            "src": "976:154:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1212:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1240:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1412,
                      "src": "1225:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "1218:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1157:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1156:15:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1194:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1194:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1194:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:18:0"
            },
            "scope": 112,
            "src": "1134:117:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 113,
        "src": "413:840:0"
      }
    ],
    "src": "0:1254:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "links": {},
      "events": {},
      "address": "0x82EA716f72618eF32F5eAA9f5eCbDA52EAE0417a",
      "updated_at": 1557327775916
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-05-08T15:01:59.011Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
